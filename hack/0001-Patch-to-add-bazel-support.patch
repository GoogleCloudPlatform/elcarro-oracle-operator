From 6d633d301aadbeba7a5899ba67fa3c321d32f638 Mon Sep 17 00:00:00 2001
From: Kurt Kartaltepe <kkartaltepe@google.com>
Date: Thu, 5 Aug 2021 17:49:56 -0700
Subject: [PATCH] Add bazel build rules

---
 .gitignore        |   1 +
 BUILD             | 125 +++++++++++++++++++++++++++++
 WORKSPACE         |  32 ++++++++
 check/BUILD.bazel |  14 ++++
 deps.bzl          | 195 ++++++++++++++++++++++++++++++++++++++++++++++
 drv.go            |   6 +-
 dsn/BUILD.bazel   |  22 ++++++
 num/BUILD.bazel   |  14 ++++
 sid/BUILD.bazel   |  14 ++++
 9 files changed, 419 insertions(+), 4 deletions(-)
 create mode 100644 BUILD
 create mode 100644 WORKSPACE
 create mode 100644 check/BUILD.bazel
 create mode 100644 deps.bzl
 create mode 100644 dsn/BUILD.bazel
 create mode 100644 num/BUILD.bazel
 create mode 100644 sid/BUILD.bazel

diff --git a/.gitignore b/.gitignore
index 43efe71..ac0505d 100644
--- a/.gitignore
+++ b/.gitignore
@@ -5,3 +5,4 @@
 *.swp
 env.sh
 ?
+bazel-*
diff --git a/BUILD b/BUILD
new file mode 100644
index 0000000..f9ed21d
--- /dev/null
+++ b/BUILD
@@ -0,0 +1,125 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+# TODO(kkartaltepe): describe this package.
+load("@bazel_gazelle//:def.bzl", "gazelle")
+
+# gazelle:prefix github.com/godror/godror
+gazelle(name = "gazelle")
+
+go_library(
+    name = "godror",
+    srcs = [
+        "conn.go",
+        "conn_go15.go",
+        "data.go",
+        "drv.go",
+        "drv_linux.go",
+        "lob.go",
+        "num_go14.go",
+        "num_go15.go",
+        "number.go",
+        "obj.go",
+        "orahlp.go",
+        "queue.go",
+        "rows.go",
+        "stmt.go",
+        "subscr.c",
+        "subscr.go",
+        "tznames_generated.go",
+        "version.go",
+    ],
+    cdeps = [":odpi"],
+    cgo = True,
+    clinkopts = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "-ldl -lpthread",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "-ldl -lpthread",
+        ],
+        "//conditions:default": [],
+    }),
+    importpath = "github.com/godror/godror",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//dsn",
+        "@com_github_go_logfmt_logfmt//:logfmt",
+    ],
+)
+
+cc_library(
+    name = "odpi",
+    srcs = [
+        "odpi/src/dpiConn.c",
+        "odpi/src/dpiContext.c",
+        "odpi/src/dpiData.c",
+        "odpi/src/dpiDebug.c",
+        "odpi/src/dpiDeqOptions.c",
+        "odpi/src/dpiEnqOptions.c",
+        "odpi/src/dpiEnv.c",
+        "odpi/src/dpiError.c",
+        "odpi/src/dpiGen.c",
+        "odpi/src/dpiGlobal.c",
+        "odpi/src/dpiHandleList.c",
+        "odpi/src/dpiHandlePool.c",
+        "odpi/src/dpiJson.c",
+        "odpi/src/dpiLob.c",
+        "odpi/src/dpiMsgProps.c",
+        "odpi/src/dpiObject.c",
+        "odpi/src/dpiObjectAttr.c",
+        "odpi/src/dpiObjectType.c",
+        "odpi/src/dpiOci.c",
+        "odpi/src/dpiOracleType.c",
+        "odpi/src/dpiPool.c",
+        "odpi/src/dpiQueue.c",
+        "odpi/src/dpiRowid.c",
+        "odpi/src/dpiSodaColl.c",
+        "odpi/src/dpiSodaCollCursor.c",
+        "odpi/src/dpiSodaDb.c",
+        "odpi/src/dpiSodaDoc.c",
+        "odpi/src/dpiSodaDocCursor.c",
+        "odpi/src/dpiStmt.c",
+        "odpi/src/dpiSubscr.c",
+        "odpi/src/dpiUtils.c",
+        "odpi/src/dpiVar.c",
+    ],
+    hdrs = [
+        "odpi/include/dpi.h",
+        "odpi/src/dpiErrorMessages.h",
+        "odpi/src/dpiImpl.h",
+    ],
+    includes = [
+        "odpi/include",
+        "odpi/src",
+    ],
+)
+
+go_test(
+    name = "godror_test",
+    srcs = [
+        "conn_test.go",
+        "data_test.go",
+        "drv_test.go",
+        "example_shutdown_test.go",
+        "number_test.go",
+        "orahlp_test.go",
+        "queue_test.go",
+        "z_119_test.go",
+        "z_bench_113_test.go",
+        "z_bench_test.go",
+        "z_conncut_test.go",
+        "z_heterogeneous_test.go",
+        "z_issue133_test.go",
+        "z_lob_test.go",
+        "z_plsql_types_test.go",
+        "z_qrcn_test.go",
+        "z_test.go",
+    ],
+    embed = [":godror"],
+    deps = [
+        "//dsn",
+        "@com_github_go_logfmt_logfmt//:logfmt",
+        "@com_github_google_go_cmp//cmp",
+        "@org_golang_x_sync//errgroup",
+    ],
+)
diff --git a/WORKSPACE b/WORKSPACE
new file mode 100644
index 0000000..00c32d7
--- /dev/null
+++ b/WORKSPACE
@@ -0,0 +1,32 @@
+load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
+
+http_archive(
+    name = "io_bazel_rules_go",
+    sha256 = "8e968b5fcea1d2d64071872b12737bbb5514524ee5f0a4f54f5920266c261acb",
+    urls = [
+        "https://mirror.bazel.build/github.com/bazelbuild/rules_go/releases/download/v0.28.0/rules_go-v0.28.0.zip",
+        "https://github.com/bazelbuild/rules_go/releases/download/v0.28.0/rules_go-v0.28.0.zip",
+    ],
+)
+
+http_archive(
+    name = "bazel_gazelle",
+    sha256 = "62ca106be173579c0a167deb23358fdfe71ffa1e4cfdddf5582af26520f1c66f",
+    urls = [
+        "https://mirror.bazel.build/github.com/bazelbuild/bazel-gazelle/releases/download/v0.23.0/bazel-gazelle-v0.23.0.tar.gz",
+        "https://github.com/bazelbuild/bazel-gazelle/releases/download/v0.23.0/bazel-gazelle-v0.23.0.tar.gz",
+    ],
+)
+
+load("@io_bazel_rules_go//go:deps.bzl", "go_register_toolchains", "go_rules_dependencies")
+load("@bazel_gazelle//:deps.bzl", "gazelle_dependencies")
+load("//:deps.bzl", "go_dependencies")
+
+# gazelle:repository_macro deps.bzl%go_dependencies
+go_dependencies()
+
+go_rules_dependencies()
+
+go_register_toolchains(version = "1.16.5")
+
+gazelle_dependencies()
diff --git a/check/BUILD.bazel b/check/BUILD.bazel
new file mode 100644
index 0000000..6b8f4f7
--- /dev/null
+++ b/check/BUILD.bazel
@@ -0,0 +1,14 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "check_lib",
+    srcs = ["check.go"],
+    importpath = "github.com/godror/godror/check",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "check",
+    embed = [":check_lib"],
+    visibility = ["//visibility:public"],
+)
diff --git a/deps.bzl b/deps.bzl
new file mode 100644
index 0000000..6325043
--- /dev/null
+++ b/deps.bzl
@@ -0,0 +1,195 @@
+load("@bazel_gazelle//:deps.bzl", "go_repository")
+
+def go_dependencies():
+    go_repository(
+        name = "co_honnef_go_tools",
+        importpath = "honnef.co/go/tools",
+        sum = "h1:/hemPrYIhOhy8zYrNj+069zDB68us2sMGsfkFJO0iZs=",
+        version = "v0.0.0-20190523083050-ea95bdfd59fc",
+    )
+    go_repository(
+        name = "com_github_bazelbuild_buildtools",
+        importpath = "github.com/bazelbuild/buildtools",
+        sum = "h1:W8bgm9kGhfUGCiY2kyYd5sYuYkieFzHQwsRb0EOZVmY=",
+        version = "v0.0.0-20210804161516-27a6414354c1",
+    )
+    go_repository(
+        name = "com_github_burntsushi_toml",
+        importpath = "github.com/BurntSushi/toml",
+        sum = "h1:WXkYYl6Yr3qBf1K79EBnL4mak0OimBfB0XUf9Vl28OQ=",
+        version = "v0.3.1",
+    )
+    go_repository(
+        name = "com_github_census_instrumentation_opencensus_proto",
+        importpath = "github.com/census-instrumentation/opencensus-proto",
+        sum = "h1:glEXhBS5PSLLv4IXzLA5yPRVX4bilULVyxxbrfOtDAk=",
+        version = "v0.2.1",
+    )
+    go_repository(
+        name = "com_github_chzyer_logex",
+        importpath = "github.com/chzyer/logex",
+        sum = "h1:Swpa1K6QvQznwJRcfTfQJmTE72DqScAa40E+fbHEXEE=",
+        version = "v1.1.10",
+    )
+    go_repository(
+        name = "com_github_chzyer_readline",
+        importpath = "github.com/chzyer/readline",
+        sum = "h1:fY5BOSpyZCqRo5OhCuC+XN+r/bBCmeuuJtjz+bCNIf8=",
+        version = "v0.0.0-20180603132655-2972be24d48e",
+    )
+    go_repository(
+        name = "com_github_chzyer_test",
+        importpath = "github.com/chzyer/test",
+        sum = "h1:q763qf9huN11kDQavWsoZXJNW3xEE4JJyHa5Q25/sd8=",
+        version = "v0.0.0-20180213035817-a1ea475d72b1",
+    )
+    go_repository(
+        name = "com_github_client9_misspell",
+        importpath = "github.com/client9/misspell",
+        sum = "h1:ta993UF76GwbvJcIo3Y68y/M3WxlpEHPWIGDkJYwzJI=",
+        version = "v0.3.4",
+    )
+    go_repository(
+        name = "com_github_envoyproxy_go_control_plane",
+        importpath = "github.com/envoyproxy/go-control-plane",
+        sum = "h1:4cmBvAEBNJaGARUEs3/suWRyfyBfhf7I60WBZq+bv2w=",
+        version = "v0.9.1-0.20191026205805-5f8ba28d4473",
+    )
+    go_repository(
+        name = "com_github_envoyproxy_protoc_gen_validate",
+        importpath = "github.com/envoyproxy/protoc-gen-validate",
+        sum = "h1:EQciDnbrYxy13PgWoY8AqoxGiPrpgBZ1R8UNe3ddc+A=",
+        version = "v0.1.0",
+    )
+    go_repository(
+        name = "com_github_go_logfmt_logfmt",
+        importpath = "github.com/go-logfmt/logfmt",
+        sum = "h1:TrB8swr/68K7m9CcGut2g3UOihhbcbiMAYiuTXdEih4=",
+        version = "v0.5.0",
+    )
+    go_repository(
+        name = "com_github_golang_glog",
+        importpath = "github.com/golang/glog",
+        sum = "h1:VKtxabqXZkF25pY9ekfRL6a582T4P37/31XEstQ5p58=",
+        version = "v0.0.0-20160126235308-23def4e6c14b",
+    )
+    go_repository(
+        name = "com_github_golang_mock",
+        importpath = "github.com/golang/mock",
+        sum = "h1:G5FRp8JnTd7RQH5kemVNlMeyXQAztQ3mOWV95KxsXH8=",
+        version = "v1.1.1",
+    )
+    go_repository(
+        name = "com_github_golang_protobuf",
+        importpath = "github.com/golang/protobuf",
+        sum = "h1:JjCZWpVbqXDqFVmTfYWEVTMIYrL/NPdPSCHPJ0T/raM=",
+        version = "v1.4.3",
+    )
+    go_repository(
+        name = "com_github_google_go_cmp",
+        importpath = "github.com/google/go-cmp",
+        sum = "h1:JFrFEBb2xKufg6XkJsJr+WbKb4FQlURi5RUcBveYu9k=",
+        version = "v0.5.1",
+    )
+    go_repository(
+        name = "com_github_prometheus_client_model",
+        importpath = "github.com/prometheus/client_model",
+        sum = "h1:gQz4mCbXsO+nc9n1hCxHcGA3Zx3Eo+UHZoInFGUIXNM=",
+        version = "v0.0.0-20190812154241-14fe0d1b01d4",
+    )
+    go_repository(
+        name = "com_google_cloud_go",
+        importpath = "cloud.google.com/go",
+        sum = "h1:e0WKqKTd5BnrG8aKH3J3h+QvEIQtSUcf2n5UZ5ZgLtQ=",
+        version = "v0.26.0",
+    )
+    go_repository(
+        name = "net_starlark_go",
+        importpath = "go.starlark.net",
+        sum = "h1:xwwDQW5We85NaTk2APgoN9202w/l0DVGp+GZMfsrh7s=",
+        version = "v0.0.0-20210223155950-e043a3d3c984",
+    )
+    go_repository(
+        name = "org_golang_google_appengine",
+        importpath = "google.golang.org/appengine",
+        sum = "h1:/wp5JvzpHIxhs/dumFmF7BXTf3Z+dd4uXta4kVyO508=",
+        version = "v1.4.0",
+    )
+    go_repository(
+        name = "org_golang_google_genproto",
+        importpath = "google.golang.org/genproto",
+        sum = "h1:+kGHl1aib/qcwaRi1CbqBZ1rk19r85MNUf8HaBghugY=",
+        version = "v0.0.0-20200526211855-cb27e3aa2013",
+    )
+    go_repository(
+        name = "org_golang_google_grpc",
+        importpath = "google.golang.org/grpc",
+        sum = "h1:rRYRFMVgRv6E0D70Skyfsr28tDXIuuPZyWGMPdMcnXg=",
+        version = "v1.27.0",
+    )
+    go_repository(
+        name = "org_golang_google_protobuf",
+        importpath = "google.golang.org/protobuf",
+        sum = "h1:Ejskq+SyPohKW+1uil0JJMtmHCgJPJ/qWTxr8qp+R4c=",
+        version = "v1.25.0",
+    )
+    go_repository(
+        name = "org_golang_x_crypto",
+        importpath = "golang.org/x/crypto",
+        sum = "h1:VklqNMn3ovrHsnt90PveolxSbWFaJdECFbxSq0Mqo2M=",
+        version = "v0.0.0-20190308221718-c2843e01d9a2",
+    )
+    go_repository(
+        name = "org_golang_x_exp",
+        importpath = "golang.org/x/exp",
+        sum = "h1:c2HOrn5iMezYjSlGPncknSEr/8x5LELb/ilJbXi9DEA=",
+        version = "v0.0.0-20190121172915-509febef88a4",
+    )
+    go_repository(
+        name = "org_golang_x_lint",
+        importpath = "golang.org/x/lint",
+        sum = "h1:XQyxROzUlZH+WIQwySDgnISgOivlhjIEwaQaJEJrrN0=",
+        version = "v0.0.0-20190313153728-d0100b6bd8b3",
+    )
+    go_repository(
+        name = "org_golang_x_net",
+        importpath = "golang.org/x/net",
+        sum = "h1:oWX7TPOiFAMXLq8o0ikBYfCJVlRHBcsciT5bXOrH628=",
+        version = "v0.0.0-20190311183353-d8887717615a",
+    )
+    go_repository(
+        name = "org_golang_x_oauth2",
+        importpath = "golang.org/x/oauth2",
+        sum = "h1:vEDujvNQGv4jgYKudGeI/+DAX4Jffq6hpD55MmoEvKs=",
+        version = "v0.0.0-20180821212333-d2e6202438be",
+    )
+    go_repository(
+        name = "org_golang_x_sync",
+        importpath = "golang.org/x/sync",
+        sum = "h1:vcxGaoTs7kV8m5Np9uUNQin4BrLOthgV7252N8V+FwY=",
+        version = "v0.0.0-20190911185100-cd5d95a43a6e",
+    )
+    go_repository(
+        name = "org_golang_x_sys",
+        importpath = "golang.org/x/sys",
+        sum = "h1:+Nyd8tzPX9R7BWHguqsrbFdRx3WQ/1ib8I44HXV5yTA=",
+        version = "v0.0.0-20200930185726-fdedc70b468f",
+    )
+    go_repository(
+        name = "org_golang_x_text",
+        importpath = "golang.org/x/text",
+        sum = "h1:g61tztE5qeGQ89tm6NTjjM9VPIm088od1l6aSorWRWg=",
+        version = "v0.3.0",
+    )
+    go_repository(
+        name = "org_golang_x_tools",
+        importpath = "golang.org/x/tools",
+        sum = "h1:5Beo0mZN8dRzgrMMkDp0jc8YXQKx9DiJ2k1dkvGsn5A=",
+        version = "v0.0.0-20190524140312-2c0ae7006135",
+    )
+    go_repository(
+        name = "org_golang_x_xerrors",
+        importpath = "golang.org/x/xerrors",
+        sum = "h1:go1bK/D/BFZV2I8cIQd1NKEZ+0owSTG1fDTci4IqFcE=",
+        version = "v0.0.0-20200804184101-5ec99f83aff1",
+    )
diff --git a/drv.go b/drv.go
index c25a0e5..e79dfe3 100644
--- a/drv.go
+++ b/drv.go
@@ -63,10 +63,8 @@
 package godror

 /*
-#cgo CFLAGS: -I./odpi/include -I./odpi/src -I./odpi/embed
-
-#include "dpi.c"
-
+#include <stdlib.h>
+#include "dpiImpl.h"
 */
 import "C"

diff --git a/dsn/BUILD.bazel b/dsn/BUILD.bazel
new file mode 100644
index 0000000..3312281
--- /dev/null
+++ b/dsn/BUILD.bazel
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "dsn",
+    srcs = [
+        "dsn.go",
+        "dsn_fuzz.go",
+    ],
+    importpath = "github.com/godror/godror/dsn",
+    visibility = ["//visibility:public"],
+    deps = ["@com_github_go_logfmt_logfmt//:logfmt"],
+)
+
+go_test(
+    name = "dsn_test",
+    srcs = ["dsn_test.go"],
+    embed = [":dsn"],
+    deps = [
+        "@com_github_google_go_cmp//cmp",
+        "@com_github_google_go_cmp//cmp/cmpopts",
+    ],
+)
diff --git a/num/BUILD.bazel b/num/BUILD.bazel
new file mode 100644
index 0000000..d28d802
--- /dev/null
+++ b/num/BUILD.bazel
@@ -0,0 +1,14 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "num",
+    srcs = ["ocinum.go"],
+    importpath = "github.com/godror/godror/num",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "num_test",
+    srcs = ["ocinum_test.go"],
+    embed = [":num"],
+)
diff --git a/sid/BUILD.bazel b/sid/BUILD.bazel
new file mode 100644
index 0000000..3e53f8a
--- /dev/null
+++ b/sid/BUILD.bazel
@@ -0,0 +1,14 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "sid",
+    srcs = ["sid.go"],
+    importpath = "github.com/godror/godror/sid",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "sid_test",
+    srcs = ["sid_test.go"],
+    deps = [":sid"],
+)
--
2.32.0.605.g8dce9f2422-goog