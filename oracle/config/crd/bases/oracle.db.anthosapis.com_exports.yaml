
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.5.0
  creationTimestamp: null
  name: exports.oracle.db.anthosapis.com
spec:
  group: oracle.db.anthosapis.com
  names:
    kind: Export
    listKind: ExportList
    plural: exports
    singular: export
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.instance
      name: Instance Name
      type: string
    - jsonPath: .spec.databaseName
      name: Database Name
      type: string
    - jsonPath: .spec.exportObjectType
      name: Export Object Type
      type: string
    - jsonPath: .spec.exportObjects
      name: Export Objects
      type: string
    - jsonPath: .spec.gcsPath
      name: GCS Path
      type: string
    - jsonPath: .spec.gcsLogPath
      name: GCS Log Path
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: ReadyStatus
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].reason
      name: ReadyReason
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].message
      name: ReadyMessage
      priority: 1
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Export is the Schema for the exports API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ExportSpec defines the desired state of Export
            properties:
              databaseName:
                description: DatabaseName is the database resource name within Instance
                  to export from.
                type: string
              exportObjectType:
                description: 'ExportObjectType is the type of objects to export. If
                  omitted, the default of Schemas is assumed. Supported options at
                  this point are: Schemas or Tables.'
                enum:
                - Schemas
                - Tables
                type: string
              exportObjects:
                description: ExportObjects are objects, schemas or tables, exported
                  by DataPump.
                items:
                  type: string
                type: array
              flashbackTime:
                description: FlashbackTime is an optional time. If this time is set,
                  the SCN that most closely matches the time is found, and this SCN
                  is used to enable the Flashback utility. The export operation is
                  performed with data that is consistent up to this SCN.
                format: date-time
                type: string
              gcsLogPath:
                description: GcsLogPath is an optional full path in GCS. If set up
                  ahead of time, export logs can be optionally transferred to set
                  GCS bucket. A user is to ensure proper write access to the bucket
                  from within the Oracle Operator.
                type: string
              gcsPath:
                description: GcsPath is a full path in GCS bucket to transfer exported
                  files to. A user is to ensure proper write access to the bucket
                  from within the Oracle Operator.
                type: string
              instance:
                description: Instance is the resource name within namespace to export
                  from.
                type: string
              type:
                description: Type of the Export. If omitted, the default of DataPump
                  is assumed.
                enum:
                - DataPump
                type: string
            required:
            - databaseName
            - instance
            type: object
          status:
            description: ExportStatus defines the observed state of Export.
            properties:
              conditions:
                description: Conditions represents the latest available observations
                  of the export's current state.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
