
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.5.0
  creationTimestamp: null
  name: configs.oracle.db.anthosapis.com
spec:
  group: oracle.db.anthosapis.com
  names:
    kind: Config
    listKind: ConfigList
    plural: configs
    singular: config
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.platform
      name: Platform
      type: string
    - jsonPath: .spec.diskSizes
      name: Disk Sizes
      type: string
    - jsonPath: .spec.storageClass
      name: Storage Class
      type: string
    - jsonPath: .spec.volumeSnapshotClass
      name: Volume Snapshot Class
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Config is the Schema for the configs API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ConfigSpec defines the desired state of Config.
            properties:
              disks:
                description: 'Disks slice describes at minimum two disks: data and
                  log (archive log), and optionally a backup disk.'
                items:
                  description: DiskSpec defines the desired state of a disk. (the
                    structure is deliberately designed to be flexible, as a slice,
                    so that if we change a disk layout for different hosting platforms,
                    the model can be also adjusted to reflect that).
                  properties:
                    accessModes:
                      description: AccessModes contains the desired access modes the
                        volume should have.
                      items:
                        type: string
                      type: array
                    annotations:
                      additionalProperties:
                        type: string
                      description: A map of string keys and values to be stored in
                        the annotations of the PVC. These can be read and write by
                        external tools through Kubernetes.
                      type: object
                    name:
                      description: 'Name of a disk. Allowed values are: DataDisk,LogDisk,BackupDisk'
                      enum:
                      - DataDisk
                      - LogDisk
                      - BackupDisk
                      type: string
                    selector:
                      description: A label query over volumes to consider for binding.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values.
                                  If the operator is In or NotIn, the values array
                                  must be non-empty. If the operator is Exists or
                                  DoesNotExist, the values array must be empty. This
                                  array is replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: matchLabels is a map of {key,value} pairs.
                            A single {key,value} in the matchLabels map is equivalent
                            to an element of matchExpressions, whose key field is
                            "key", the operator is "In", and the values array contains
                            only "value". The requirements are ANDed.
                          type: object
                      type: object
                    size:
                      anyOf:
                      - type: integer
                      - type: string
                      description: 'Disk size. If not specified, the defaults are:
                        DataDisk:"100Gi", LogDisk:"150Gi",BackupDisk:"100Gi"'
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    storageClass:
                      description: StorageClass points to a particular CSI driver
                        and is used for disk provisioning.
                      type: string
                  required:
                  - name
                  type: object
                type: array
              hostAntiAffinityNamespaces:
                description: HostAntiAffinityNamespaces is an optional list of namespaces
                  that need to be included in anti-affinity by hostname rule. The
                  effect of the rule is forbidding scheduling a database pod in the
                  current namespace on a host that already runs a database pod in
                  any of the listed namespaces.
                items:
                  type: string
                type: array
              images:
                additionalProperties:
                  type: string
                description: Service agent and other data plane agent images. This
                  is an optional map that allows a customer to specify agent images
                  different from those chosen/provided by the operator by default.
                type: object
              logLevel:
                additionalProperties:
                  type: string
                description: Log Levels for the various components. This is an optional
                  map for component -> log level
                type: object
              platform:
                description: 'Deployment platform. Presently supported values are:
                  GCP (default), BareMetal, Minikube and Kind.'
                enum:
                - GCP
                - BareMetal
                - Minikube
                - Kind
                type: string
              storageClass:
                description: Storage class to use for dynamic provisioning. This value
                  varies depending on a platform. For GCP (and the default) it is
                  "csi-gce-pd".
                type: string
              volumeSnapshotClass:
                description: Volume Snapshot class to use for storage snapshots. This
                  value varies depending on a platform. For GCP (and the default)
                  it is "csi-gce-pd-snapshot-class".
                type: string
            type: object
          status:
            description: ConfigStatus defines the observed state of Config.
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
