
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.5.0
  creationTimestamp: null
  name: backupschedules.oracle.db.anthosapis.com
spec:
  group: oracle.db.anthosapis.com
  names:
    kind: BackupSchedule
    listKind: BackupScheduleList
    plural: backupschedules
    singular: backupschedule
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: BackupSchedule is the Schema for the backupschedules API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              backupRetentionPolicy:
                description: BackupRetentionPolicy is the policy used to trigger automatic
                  deletion of backups produced from this BackupSchedule.
                properties:
                  backupRetention:
                    description: BackupRetention is the number of successful backups
                      to keep around. The default is 7. A value of 0 means "do not
                      delete backups based on count". Max of 512 allows for ~21 days
                      of hourly backups or ~1.4 years of daily backups.
                    format: int32
                    maximum: 512
                    minimum: 0
                    type: integer
                type: object
              backupSpec:
                description: BackupSpec defines the Backup that will be created on
                  the provided schedule.
                properties:
                  backupItems:
                    description: For a Physical backup this slice can be used to indicate
                      what PDBs, schemas, tablespaces or tables to back up.
                    items:
                      type: string
                    type: array
                  backupset:
                    description: For a Physical backup the choices are Backupset and
                      Image Copies. Backupset is the default, but if Image Copies
                      are required, flip this flag to false.
                    type: boolean
                  checkLogical:
                    description: For a Physical backup, optionally turn on an additional
                      "check logical" option. The default is off.
                    type: boolean
                  compressed:
                    description: For a Physical backup, optionally turn on compression,
                      by flipping this flag to true. The default is false.
                    type: boolean
                  dop:
                    description: For a Physical backup, optionally indicate a degree
                      of parallelism also known as DOP.
                    format: int32
                    maximum: 100
                    minimum: 1
                    type: integer
                  filesperset:
                    description: For a Physical backup, optionally specify filesperset.
                      The default depends on a type of backup, generally 64.
                    format: int32
                    type: integer
                  gcsPath:
                    description: If set up ahead of time, the backup sets of a physical
                      backup can be optionally transferred to a GCS bucket. A user
                      is to ensure proper write access to the bucket from within the
                      Oracle Operator.
                    pattern: ^gs:\/\/.+$
                    type: string
                  instance:
                    description: Instance is a name of an instance to take a backup
                      for.
                    type: string
                  keepDataOnDeletion:
                    description: KeepDataOnDeletion defines whether to keep backup
                      data when backup resource is removed. The default value is false.
                    type: boolean
                  level:
                    description: For a Physical backup, optionally specify an incremental
                      level. The default is 0 (the whole database).
                    format: int32
                    type: integer
                  localPath:
                    description: For a Physical backup, optionally specify a local
                      backup dir. If omitted, /u03/app/oracle/rman is assumed.
                    type: string
                  mode:
                    description: Mode specifies how this backup will be managed by
                      the operator. if it is not set, the operator tries to create
                      a backup based on the specifications. if it is set to VerifyExists,
                      the operator verifies the existence of a backup.
                    enum:
                    - VerifyExists
                    type: string
                  sectionSize:
                    anyOf:
                    - type: integer
                    - type: string
                    description: For a Physical backup, optionally specify a section
                      size in various units (K M G).
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  subType:
                    description: 'Backup sub-type, which is only relevant for a Physical
                      backup type (e.g. RMAN). If omitted, the default of Instance(Level)
                      is assumed. Supported options at this point are: Instance or
                      Database level backups.'
                    enum:
                    - Instance
                    - Database
                    - Tablespace
                    - Datafile
                    type: string
                  timeLimitMinutes:
                    description: For a Physical backup, optionally specify the time
                      threshold. If a threshold is reached, the backup request would
                      time out and error out. The threshold is expressed in minutes.
                      Don't include the unit (minutes), just the integer.
                    format: int32
                    type: integer
                  type:
                    description: "Type describes a type of a backup to take. Immutable.
                      Available options are: - Snapshot: storage level disk snapshot.
                      - Physical: database engine specific backup that relies on a
                      redo stream /             continuous archiving (WAL) and may
                      allow a PITR.             Examples include pg_backup, pgBackRest,
                      mysqlbackup.             A Physical backup may be file based
                      or database block based \t       (e.g. Oracle RMAN). - Logical:
                      database engine specific backup that relies on running SQL            statements,
                      e.g. mysqldump, pg_dump, expdp. If not specified, the default
                      of Snapshot is assumed."
                    enum:
                    - Snapshot
                    - Physical
                    - Logical
                    type: string
                  volumeSnapshotClass:
                    description: VolumeSnapshotClass points to a particular CSI driver
                      and is used for taking a volume snapshot. If requested here
                      at the Backup level, this setting overrides the platform default
                      as well as the default set via the Config (global user preferences).
                    type: string
                type: object
              schedule:
                description: Schedule is a cron-style expression of the schedule on
                  which Backup will be created. For allowed syntax, see en.wikipedia.org/wiki/Cron
                  and godoc.org/github.com/robfig/cron.
                type: string
              startingDeadlineSeconds:
                description: StartingDeadlineSeconds is an optional deadline in seconds
                  for starting the backup creation if it misses scheduled time for
                  any reason. The default is 30 seconds.
                format: int64
                type: integer
              suspend:
                description: Suspend tells the controller to suspend operations -
                  both creation of new Backup and retention actions. This will not
                  have any effect on backups currently in progress. Default is false.
                type: boolean
            required:
            - backupSpec
            - schedule
            type: object
          status:
            description: BackupScheduleStatus defines the observed state of BackupSchedule.
            properties:
              backupHistory:
                description: BackupHistory stores the records for up to 7 of the latest
                  backups.
                items:
                  description: BackupHistoryRecord is a historical record of a Backup.
                  properties:
                    backupName:
                      description: BackupName is the name of the Backup that gets
                        created.
                      nullable: true
                      type: string
                    creationTime:
                      description: CreationTime is the time that the Backup gets created.
                      format: date-time
                      nullable: true
                      type: string
                    phase:
                      description: Phase tells the state of the Backup.
                      type: string
                  required:
                  - backupName
                  - creationTime
                  type: object
                type: array
              backupTotal:
                description: BackupTotal stores the total number of current existing
                  backups created by this backupSchedule.
                format: int32
                type: integer
              conditions:
                description: Conditions of the BackupSchedule.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              lastBackupTime:
                description: LastBackupTime is the time the last Backup was created
                  for this BackupSchedule.
                format: date-time
                nullable: true
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
