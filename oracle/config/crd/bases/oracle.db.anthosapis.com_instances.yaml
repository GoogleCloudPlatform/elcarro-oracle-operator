---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: instances.oracle.db.anthosapis.com
spec:
  group: oracle.db.anthosapis.com
  names:
    categories:
    - genericinstances
    kind: Instance
    listKind: InstanceList
    plural: instances
    shortNames:
    - ginst
    singular: instance
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.type
      name: DB Engine
      type: string
    - jsonPath: .spec.version
      name: Version
      type: string
    - jsonPath: .spec.edition
      name: Edition
      type: string
    - jsonPath: .status.endpoint
      name: Endpoint
      type: string
    - jsonPath: .status.url
      name: URL
      type: string
    - jsonPath: .status.databasenames
      name: DB Names
      type: string
    - jsonPath: .status.backupid
      name: Backup ID
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: ReadyStatus
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].reason
      name: ReadyReason
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].message
      name: ReadyMessage
      priority: 1
      type: string
    - jsonPath: .status.conditions[?(@.type=="DatabaseInstanceReady")].status
      name: DBReadyStatus
      type: string
    - jsonPath: .status.conditions[?(@.type=="DatabaseInstanceReady")].reason
      name: DBReadyReason
      type: string
    - jsonPath: .status.conditions[?(@.type=="DatabaseInstanceReady")].message
      name: DBReadyMessage
      priority: 1
      type: string
    - jsonPath: .status.isChangeApplied
      name: IsChangeApplied
      priority: 1
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Instance is the Schema for the instances API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: InstanceSpec defines the desired state of Instance.
            properties:
              adminUser:
                description: AdminUser represents the admin user specification
                properties:
                  forceResetPassword:
                    description: ForceResetPassword defines the flag needed to reset
                      admin user password
                    type: boolean
                  requestTime:
                    description: RequestTime is a date-time to avoid triggering of
                      a password reset repeatedly. If at least one password reset
                      operation has occurred, any further reset operation that have
                      RequestTime same or earlier than CreateTime will be ignored.
                    format: date-time
                    type: string
                type: object
              cdbName:
                description: 'CDBName is the intended name of the CDB attribute. If
                  the CDBName is different from the original name (with which the
                  CDB was created) the CDB will be renamed.  The CDBName should meet
                  Oracle SID requirements: uppercase, alphanumeric, max 8 characters,
                  and not start with a number.'
                maxLength: 8
                pattern: ^[A-Z][A-Z0-9]*$
                type: string
              characterSet:
                description: CharacterSet used to create a database (the default is
                  AL32UTF8).
                type: string
              cloudProvider:
                description: CloudProvider is only relevant if the hosting type is
                  Cloud, MultiCloud, Hybrid or Bare Metal.
                enum:
                - GCP
                - AWS
                - Azure
                - OCI
                type: string
              databaseGID:
                description: DatabaseGID represents an OS group ID of a user running
                  a database.
                format: int64
                type: integer
              databasePatchingTimeout:
                description: Max threshold for database patching. This timeout is
                  used independently for sts patching and OPatch/datapatch execution.
                type: string
              databaseResources:
                description: Resource specification for the database container. If
                  not specified, a default of 4.0Gi memory request will be used to
                  safeguard the db container without crashes due to memory pressure.
                properties:
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                type: object
              databaseUID:
                description: DatabaseUID represents an OS UID of a user running a
                  database.
                format: int64
                type: integer
              dbDomain:
                description: DBDomain is an optional attribute to set a database domain.
                type: string
              dbLoadBalancerOptions:
                description: DBNetworkServiceOptions allows to override some details
                  of kubernetes Service created to expose a connection to database.
                properties:
                  gcp:
                    description: GCP contains Google Cloud specific attributes for
                      the Kubernetes LoadBalancer.
                    properties:
                      loadBalancerIP:
                        description: LoadBalancerIP is a static IP address, see https://cloud.google.com/compute/docs/ip-addresses/reserve-static-external-ip-address
                        type: string
                      loadBalancerType:
                        description: A LoadBalancer can be internal or external. See
                          https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
                        enum:
                        - ""
                        - Internal
                        - External
                        type: string
                    type: object
                type: object
              dbUniqueName:
                description: DBUniqueName represents a unique database name that would
                  be set for a database (if not provided, as a default, the [_generic|_<zone
                  name>] will be appended to a DatabaseName).
                type: string
              deploymentType:
                description: DeploymentType reflects a fully managed (DBaaS) vs. semi-managed
                  database.
                enum:
                - ""
                - InCluster
                - CloudSQL
                - RDS
                type: string
              disks:
                description: 'Disks slice describes at minimum two disks: data and
                  log (archive log), and optionally a backup disk.'
                items:
                  description: DiskSpec defines the desired state of a disk. (the
                    structure is deliberately designed to be flexible, as a slice,
                    so that if we change a disk layout for different hosting platforms,
                    the model can be also adjusted to reflect that).
                  properties:
                    accessModes:
                      description: AccessModes contains the desired access modes the
                        volume should have.
                      items:
                        type: string
                      type: array
                    annotations:
                      additionalProperties:
                        type: string
                      description: A map of string keys and values to be stored in
                        the annotations of the PVC. These can be read and write by
                        external tools through Kubernetes.
                      type: object
                    name:
                      description: 'Name of a disk. Allowed values are: DataDisk,LogDisk,BackupDisk'
                      enum:
                      - DataDisk
                      - LogDisk
                      - BackupDisk
                      type: string
                    selector:
                      description: A label query over volumes to consider for binding.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values.
                                  If the operator is In or NotIn, the values array
                                  must be non-empty. If the operator is Exists or
                                  DoesNotExist, the values array must be empty. This
                                  array is replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: matchLabels is a map of {key,value} pairs.
                            A single {key,value} in the matchLabels map is equivalent
                            to an element of matchExpressions, whose key field is
                            "key", the operator is "In", and the values array contains
                            only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                    size:
                      anyOf:
                      - type: integer
                      - type: string
                      description: 'Disk size. If not specified, the defaults are:
                        DataDisk:"100Gi", LogDisk:"150Gi",BackupDisk:"100Gi"'
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    storageClass:
                      description: StorageClass points to a particular CSI driver
                        and is used for disk provisioning.
                      type: string
                    volumeName:
                      description: VolumeName is the binding reference to the PersistentVolume
                        tied to this disk.
                      type: string
                  required:
                  - name
                  type: object
                type: array
              edition:
                description: Edition of a database.
                type: string
              enableDnfs:
                description: EnableDnfs enables configuration of Oracle's dNFS functionality.
                type: boolean
              hostingType:
                description: HostingType conveys whether an Instance is meant to be
                  hosted on a cloud (single or multiple), on-prem, on Bare Metal,
                  etc. It is meant to be used as a filter and aggregation dimension.
                enum:
                - ""
                - Cloud
                - MultiCloud
                - Hybrid
                - BareMetal
                - OnPrem
                type: string
              images:
                additionalProperties:
                  type: string
                description: Service agent and other data plane GCR images. This is
                  an optional map that allows a customer to specify GCR images different
                  from those chosen/provided.
                type: object
              maintenanceWindow:
                description: MaintenanceWindow specifies the time windows during which
                  database downtimes are allowed for maintenance.
                properties:
                  timeRanges:
                    description: Maintenance time ranges.
                    items:
                      description: TimeRange defines a window of time. Both start
                        time and duration are required.
                      properties:
                        duration:
                          description: Duration of the maintenance window
                          type: string
                        start:
                          description: Start time.
                          format: date-time
                          type: string
                      type: object
                    type: array
                type: object
              memoryPercent:
                description: MemoryPercent represents the percentage of memory that
                  should be allocated for Oracle SGA (default is 25%).
                maximum: 100
                minimum: 0
                type: integer
              mode:
                description: Mode specifies how this instance will be managed by the
                  operator.
                enum:
                - ManuallySetUpStandby
                - Pause
                type: string
              parameters:
                additionalProperties:
                  type: string
                description: Parameters contains the database flags in the map format
                type: object
              replicationSettings:
                description: ReplicationSettings provides configuration for initializing
                  an instance as a standby for the specified primary instance. These
                  settings can only be used when initializing an instance, adding
                  them to an already created instance is an error. Once a standby
                  is created with these settings you may promote the standby to its
                  own independent instance by removing these settings. DBUniqueName
                  must be set when initializing a standby instance.
                properties:
                  backupURI:
                    description: BackupURI is the URI to a copy of the primary's RMAN
                      backup. Standby will be created from this backup when provided.
                      Currently only gs:// (GCS) schemes are supported.
                    type: string
                  passwordFileURI:
                    description: PasswordFileURI is the URI to a copy of the primary's
                      password file for establishing an active dataguard connection.
                      Currently only gs:// (GCS) schemes are supported.
                    type: string
                  primaryHost:
                    description: PrimaryHost is the hostname of the primary's listener.
                    type: string
                  primaryPort:
                    description: PrimaryPort is the port of the primary's listener.
                    format: int32
                    type: integer
                  primaryServiceName:
                    description: PrimaryServiceName is the service name of the primary
                      database on the listener at PrimaryHost:PrimaryPort.
                    type: string
                  primaryUser:
                    description: PrimaryUser specifies the user name and credential
                      to authenticate to the primary database as.
                    properties:
                      gsmSecretRef:
                        description: A reference to a GSM secret.
                        properties:
                          projectId:
                            description: ProjectId identifies the project where the
                              secret resource is.
                            type: string
                          secretId:
                            description: SecretId identifies the secret.
                            type: string
                          version:
                            description: Version is the version of the secret. If
                              "latest" is specified, underlying the latest SecretId
                              is used.
                            type: string
                        type: object
                      name:
                        description: Name of the User.
                        type: string
                      password:
                        description: Plaintext password.
                        type: string
                      secretRef:
                        description: A reference to a k8s secret.
                        properties:
                          name:
                            description: name is unique within a namespace to reference
                              a secret resource.
                            type: string
                          namespace:
                            description: namespace defines the space within which
                              the secret name must be unique.
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                required:
                - passwordFileURI
                - primaryHost
                - primaryPort
                - primaryServiceName
                - primaryUser
                type: object
              restore:
                description: Restore and recovery request details. This section should
                  normally be commented out unless an actual restore/recovery is required.
                properties:
                  backupId:
                    description: Backup ID to restore from.
                    type: string
                  backupRef:
                    description: Backup reference to restore from.
                    properties:
                      name:
                        description: '`name` is the name of the backup.'
                        type: string
                      namespace:
                        description: '`namespace` is the namespace in which the backup
                          object is created.'
                        type: string
                    type: object
                  backupType:
                    description: 'Backup type to restore from. Oracle only supports:
                      Snapshot or Physical.'
                    enum:
                    - Snapshot
                    - Physical
                    type: string
                  dop:
                    description: Similar to a (physical) backup, optionally indicate
                      a degree of parallelism, also known as DOP.
                    format: int32
                    maximum: 100
                    minimum: 1
                    type: integer
                  force:
                    description: To overwrite an existing, up and running instance,
                      an explicit athorization is required. This is safeguard to avoid
                      accidentally destroying a perfectly healthy (status=Ready) instance.
                    enum:
                    - true
                    - false
                    type: boolean
                  pitrRestore:
                    description: Point In Time Recovery restore spec.
                    properties:
                      incarnation:
                        description: Incarnation number to restore to. This is optional,
                          default to current incarnation.
                        type: string
                      pitrRef:
                        description: PITRRef specifies the PITR object from which
                          to read backup data.
                        properties:
                          name:
                            description: '`name` is the name of the PITR.'
                            type: string
                          namespace:
                            description: '`namespace` is the namespace in which the
                              PITR object is created.'
                            type: string
                        type: object
                      scn:
                        description: SCN to restore to.
                        type: string
                      timestamp:
                        description: Timestamp to restore to.
                        format: date-time
                        type: string
                    type: object
                  requestTime:
                    description: Request version as a date-time to avoid accidental
                      triggering of a restore operation when reapplying an older version
                      of a resource file. If at least one restore operation has occurred,
                      any further restore operation that have the same RequestTime
                      or earlier than the last Restore operation will be ignored.
                    format: date-time
                    type: string
                  timeLimitMinutes:
                    description: Restore time limit. Optional field defaulting to
                      three times the backup time limit. Don't include the unit (minutes),
                      just the integer.
                    format: int32
                    minimum: 0
                    type: integer
                required:
                - requestTime
                type: object
              retainDisksAfterInstanceDeletion:
                description: RetainDisksAfterInstanceDeletion should be set to true
                  if Persistent Volumes and underlying disks should be retained after
                  the Instance is deleted. The Default value is false, meaning disks
                  are deleted with the instance.
                type: boolean
              services:
                additionalProperties:
                  type: boolean
                description: Services list the optional semi-managed services that
                  the customers can choose from.
                type: object
              sourceCidrRanges:
                description: Source IP CIDR ranges allowed for a client.
                items:
                  type: string
                type: array
              type:
                description: Type of a database engine.
                enum:
                - Oracle
                type: string
              version:
                description: Version of a database.
                type: string
            type: object
          status:
            description: InstanceStatus defines the observed state of Instance.
            properties:
              ActiveImages:
                additionalProperties:
                  type: string
                description: ActiveImages stores the stable images used by the active
                  containers.
                type: object
              CurrentActiveStateMachine:
                description: CurrentActiveStateMachine stores the name of the state
                  machine currently active.
                type: string
              DnfsEnabled:
                description: DnfsEnabled stores whether dNFS has already been enabled
                  or not.
                type: boolean
              LastFailedImages:
                additionalProperties:
                  type: string
                description: LastFailedImages stores the images which failed the last
                  patching workflow..
                type: object
              adminUser:
                description: AdminUser represents the observed state of the admin
                  user
                properties:
                  createTime:
                    description: CreateTime is the time admin user is created or last
                      updated
                    format: date-time
                    type: string
                  expireTime:
                    description: ExpireTime is the expire time of the secret that
                      contains admin user password
                    format: date-time
                    type: string
                  secretRef:
                    description: SecretRef is a reference to the secret that contains
                      admin user password
                    properties:
                      name:
                        description: name is unique within a namespace to reference
                          a secret resource.
                        type: string
                      namespace:
                        description: namespace defines the space within which the
                          secret name must be unique.
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                type: object
              backupid:
                description: Last backup ID.
                type: string
              conditions:
                description: Conditions represents the latest available observations
                  of the Instance's current state.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              currentDatabaseIncarnation:
                description: CurrentDatabaseIncarnation stores the current incarnation
                  number
                type: string
              currentParameters:
                additionalProperties:
                  type: string
                description: CurrentParameters stores the last successfully set instance
                  parameters.
                type: object
              currentReplicationSettings:
                description: CurrentReplicationSettings stores the current replication
                  settings of the standby instance. Standby data replication uses
                  it to promote a standby instance. It will be updated to match with
                  spec.replicationSettings before promotion. It will be removed once
                  data replication is completed.
                properties:
                  backupURI:
                    description: BackupURI is the URI to a copy of the primary's RMAN
                      backup. Standby will be created from this backup when provided.
                      Currently only gs:// (GCS) schemes are supported.
                    type: string
                  passwordFileURI:
                    description: PasswordFileURI is the URI to a copy of the primary's
                      password file for establishing an active dataguard connection.
                      Currently only gs:// (GCS) schemes are supported.
                    type: string
                  primaryHost:
                    description: PrimaryHost is the hostname of the primary's listener.
                    type: string
                  primaryPort:
                    description: PrimaryPort is the port of the primary's listener.
                    format: int32
                    type: integer
                  primaryServiceName:
                    description: PrimaryServiceName is the service name of the primary
                      database on the listener at PrimaryHost:PrimaryPort.
                    type: string
                  primaryUser:
                    description: PrimaryUser specifies the user name and credential
                      to authenticate to the primary database as.
                    properties:
                      gsmSecretRef:
                        description: A reference to a GSM secret.
                        properties:
                          projectId:
                            description: ProjectId identifies the project where the
                              secret resource is.
                            type: string
                          secretId:
                            description: SecretId identifies the secret.
                            type: string
                          version:
                            description: Version is the version of the secret. If
                              "latest" is specified, underlying the latest SecretId
                              is used.
                            type: string
                        type: object
                      name:
                        description: Name of the User.
                        type: string
                      password:
                        description: Plaintext password.
                        type: string
                      secretRef:
                        description: A reference to a k8s secret.
                        properties:
                          name:
                            description: name is unique within a namespace to reference
                              a secret resource.
                            type: string
                          namespace:
                            description: namespace defines the space within which
                              the secret name must be unique.
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                required:
                - passwordFileURI
                - primaryHost
                - primaryPort
                - primaryServiceName
                - primaryUser
                type: object
              dataGuardOutput:
                description: DataGuardOutput stores the latest Data Guard utility
                  status output.
                properties:
                  lastUpdateTime:
                    description: LastUpdateTime is the last time the DataGuardOutput
                      updated based on DB Data Guard utility output.
                    format: date-time
                    type: string
                  statusOutput:
                    description: StatusOutput is the output of "show configuration"
                      and "show database <standby DB unique name>".
                    items:
                      type: string
                    type: array
                required:
                - lastUpdateTime
                - statusOutput
                type: object
              databasenames:
                description: List of database names (e.g. PDBs) hosted in the Instance.
                items:
                  type: string
                type: array
              description:
                description: Description is for a human consumption. E.g. when an
                  Instance is restored from a backup this field is populated with
                  the human readable restore details.
                type: string
              endpoint:
                description: Endpoint is presently expressed in the format of <instanceName>-svc.<ns>.
                type: string
              isChangeApplied:
                description: IsChangeApplied indicates whether instance changes have
                  been applied
                type: string
              lastDatabaseIncarnation:
                description: LastDatabaseIncarnation stores the parent incarnation
                  number
                type: string
              lastFailedParameterUpdate:
                additionalProperties:
                  type: string
                description: LastFailedParameterUpdate is used to avoid getting into
                  the failed parameter update loop.
                type: object
              lastRestoreTime:
                format: date-time
                type: string
              lockedBy:
                description: LockedByController is a shared lock field granting exclusive
                  access to maintenance operations to only one controller. Empty value
                  means unlocked. Non-empty value contains the name of the owning
                  controller.
                type: string
              observedGeneration:
                description: ObservedGeneration is the latest generation observed
                  by the controller.
                format: int64
                type: integer
              phase:
                description: Phase is a summary of current state of the Instance.
                type: string
              url:
                description: URL represents an IP and a port number info needed in
                  order to establish a database connection from outside a cluster.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
