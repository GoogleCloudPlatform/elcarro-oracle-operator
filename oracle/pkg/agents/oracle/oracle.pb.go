// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.6
// source: oracle/pkg/agents/oracle/oracle.proto

package oracle

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// DatabaseState represents different states of a database.
type DatabaseState int32

const (
	// Not set.
	DatabaseState_DATABASE_STATE_UNSPECIFIED DatabaseState = 0
	// Being created.
	DatabaseState_CREATING DatabaseState = 1
	// Has been created and is fully usable.
	DatabaseState_READY DatabaseState = 2
	// Being stopped.
	DatabaseState_STOPPING DatabaseState = 3
	// Stopped.
	DatabaseState_STOPPED DatabaseState = 4
	// Being updated.
	DatabaseState_UPDATING DatabaseState = 5
	// Being deleted.
	DatabaseState_DELETING DatabaseState = 6
	// Being repaired and may be unusable.
	DatabaseState_DATABASE_STATE_ERROR DatabaseState = 7
)

// Enum value maps for DatabaseState.
var (
	DatabaseState_name = map[int32]string{
		0: "DATABASE_STATE_UNSPECIFIED",
		1: "CREATING",
		2: "READY",
		3: "STOPPING",
		4: "STOPPED",
		5: "UPDATING",
		6: "DELETING",
		7: "DATABASE_STATE_ERROR",
	}
	DatabaseState_value = map[string]int32{
		"DATABASE_STATE_UNSPECIFIED": 0,
		"CREATING":                   1,
		"READY":                      2,
		"STOPPING":                   3,
		"STOPPED":                    4,
		"UPDATING":                   5,
		"DELETING":                   6,
		"DATABASE_STATE_ERROR":       7,
	}
)

func (x DatabaseState) Enum() *DatabaseState {
	p := new(DatabaseState)
	*p = x
	return p
}

func (x DatabaseState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DatabaseState) Descriptor() protoreflect.EnumDescriptor {
	return file_oracle_pkg_agents_oracle_oracle_proto_enumTypes[0].Descriptor()
}

func (DatabaseState) Type() protoreflect.EnumType {
	return &file_oracle_pkg_agents_oracle_oracle_proto_enumTypes[0]
}

func (x DatabaseState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DatabaseState.Descriptor instead.
func (DatabaseState) EnumDescriptor() ([]byte, []int) {
	return file_oracle_pkg_agents_oracle_oracle_proto_rawDescGZIP(), []int{0}
}

// ListenerState defines whether a listener is up, down or in error state.
type ListenerState int32

const (
	ListenerState_LISTENER_STATE_UNSPECIFIED ListenerState = 0
	ListenerState_UP                         ListenerState = 1
	ListenerState_DOWN                       ListenerState = 2
	// enum values use C++ scoping rules, meaning that enum values
	// are siblings of their type, not children of it.
	// Therefore an ERROR must be unique across all enums in this proto.
	ListenerState_LISTENER_STATE_ERROR ListenerState = 3
)

// Enum value maps for ListenerState.
var (
	ListenerState_name = map[int32]string{
		0: "LISTENER_STATE_UNSPECIFIED",
		1: "UP",
		2: "DOWN",
		3: "LISTENER_STATE_ERROR",
	}
	ListenerState_value = map[string]int32{
		"LISTENER_STATE_UNSPECIFIED": 0,
		"UP":                         1,
		"DOWN":                       2,
		"LISTENER_STATE_ERROR":       3,
	}
)

func (x ListenerState) Enum() *ListenerState {
	p := new(ListenerState)
	*p = x
	return p
}

func (x ListenerState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListenerState) Descriptor() protoreflect.EnumDescriptor {
	return file_oracle_pkg_agents_oracle_oracle_proto_enumTypes[1].Descriptor()
}

func (ListenerState) Type() protoreflect.EnumType {
	return &file_oracle_pkg_agents_oracle_oracle_proto_enumTypes[1]
}

func (x ListenerState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListenerState.Descriptor instead.
func (ListenerState) EnumDescriptor() ([]byte, []int) {
	return file_oracle_pkg_agents_oracle_oracle_proto_rawDescGZIP(), []int{1}
}

// Allowed database bounce operations.
type BounceDatabaseRequest_Operation int32

const (
	// UNKNOWN is an unacceptable database operation
	// to be rejected by the DatabaseDaemon.
	BounceDatabaseRequest_UNKNOWN BounceDatabaseRequest_Operation = 0
	// STARTUP is an operation that starts a database
	// bringing it up to a state defined by OPTION
	// (default OPTION is open).
	BounceDatabaseRequest_STARTUP BounceDatabaseRequest_Operation = 1
	// SHUTDOWN is an operation that stops a database.
	// The way a database is stopped using SHUTDOWN
	// operation is determined by OPTION
	// (default OPTION is immediate).
	BounceDatabaseRequest_SHUTDOWN BounceDatabaseRequest_Operation = 2
)

// Enum value maps for BounceDatabaseRequest_Operation.
var (
	BounceDatabaseRequest_Operation_name = map[int32]string{
		0: "UNKNOWN",
		1: "STARTUP",
		2: "SHUTDOWN",
	}
	BounceDatabaseRequest_Operation_value = map[string]int32{
		"UNKNOWN":  0,
		"STARTUP":  1,
		"SHUTDOWN": 2,
	}
)

func (x BounceDatabaseRequest_Operation) Enum() *BounceDatabaseRequest_Operation {
	p := new(BounceDatabaseRequest_Operation)
	*p = x
	return p
}

func (x BounceDatabaseRequest_Operation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BounceDatabaseRequest_Operation) Descriptor() protoreflect.EnumDescriptor {
	return file_oracle_pkg_agents_oracle_oracle_proto_enumTypes[2].Descriptor()
}

func (BounceDatabaseRequest_Operation) Type() protoreflect.EnumType {
	return &file_oracle_pkg_agents_oracle_oracle_proto_enumTypes[2]
}

func (x BounceDatabaseRequest_Operation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BounceDatabaseRequest_Operation.Descriptor instead.
func (BounceDatabaseRequest_Operation) EnumDescriptor() ([]byte, []int) {
	return file_oracle_pkg_agents_oracle_oracle_proto_rawDescGZIP(), []int{0, 0}
}

// Allowed listener bounce operations.
type BounceListenerRequest_Operation int32

const (
	// UNKNOWN is an unacceptable listener operation
	// to be rejected by the DatabaseDaemon.
	BounceListenerRequest_UNKNOWN BounceListenerRequest_Operation = 0
	// START is an operation that starts a listener.
	BounceListenerRequest_START BounceListenerRequest_Operation = 1
	// STOP is an operation that stops a listener.
	BounceListenerRequest_STOP BounceListenerRequest_Operation = 2
)

// Enum value maps for BounceListenerRequest_Operation.
var (
	BounceListenerRequest_Operation_name = map[int32]string{
		0: "UNKNOWN",
		1: "START",
		2: "STOP",
	}
	BounceListenerRequest_Operation_value = map[string]int32{
		"UNKNOWN": 0,
		"START":   1,
		"STOP":    2,
	}
)

func (x BounceListenerRequest_Operation) Enum() *BounceListenerRequest_Operation {
	p := new(BounceListenerRequest_Operation)
	*p = x
	return p
}

func (x BounceListenerRequest_Operation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BounceListenerRequest_Operation) Descriptor() protoreflect.EnumDescriptor {
	return file_oracle_pkg_agents_oracle_oracle_proto_enumTypes[3].Descriptor()
}

func (BounceListenerRequest_Operation) Type() protoreflect.EnumType {
	return &file_oracle_pkg_agents_oracle_oracle_proto_enumTypes[3]
}

func (x BounceListenerRequest_Operation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BounceListenerRequest_Operation.Descriptor instead.
func (BounceListenerRequest_Operation) EnumDescriptor() ([]byte, []int) {
	return file_oracle_pkg_agents_oracle_oracle_proto_rawDescGZIP(), []int{2, 0}
}

type BounceDatabaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatabaseName string `protobuf:"bytes,1,opt,name=database_name,json=databaseName,proto3" json:"database_name,omitempty"`
	// operation: startup / shutdown
	Operation BounceDatabaseRequest_Operation `protobuf:"varint,2,opt,name=operation,proto3,enum=agents.oracle.BounceDatabaseRequest_Operation" json:"operation,omitempty"`
	// option: nomount/mount/open or immediate/transactional/abort
	Option string `protobuf:"bytes,3,opt,name=option,proto3" json:"option,omitempty"`
	// avoid_config_backup: by default we backup the config except for scenarios
	// when it isn't possible (like bootstrapping)
	AvoidConfigBackup bool `protobuf:"varint,4,opt,name=avoid_config_backup,json=avoidConfigBackup,proto3" json:"avoid_config_backup,omitempty"`
}

func (x *BounceDatabaseRequest) Reset() {
	*x = BounceDatabaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oracle_pkg_agents_oracle_oracle_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BounceDatabaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BounceDatabaseRequest) ProtoMessage() {}

func (x *BounceDatabaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_oracle_pkg_agents_oracle_oracle_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BounceDatabaseRequest.ProtoReflect.Descriptor instead.
func (*BounceDatabaseRequest) Descriptor() ([]byte, []int) {
	return file_oracle_pkg_agents_oracle_oracle_proto_rawDescGZIP(), []int{0}
}

func (x *BounceDatabaseRequest) GetDatabaseName() string {
	if x != nil {
		return x.DatabaseName
	}
	return ""
}

func (x *BounceDatabaseRequest) GetOperation() BounceDatabaseRequest_Operation {
	if x != nil {
		return x.Operation
	}
	return BounceDatabaseRequest_UNKNOWN
}

func (x *BounceDatabaseRequest) GetOption() string {
	if x != nil {
		return x.Option
	}
	return ""
}

func (x *BounceDatabaseRequest) GetAvoidConfigBackup() bool {
	if x != nil {
		return x.AvoidConfigBackup
	}
	return false
}

// BounceDatabaseResponse is a message containing
// a response from a BounceDatabase request.
// database_state is set to ERROR if an expected error
// occurs (e.g. a security verification check fails).
// Otherwise database_state is set to nil and an
// unexpected error is returned via error.
type BounceDatabaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Possible states: READY, STOPPED, ERROR.
	DatabaseState DatabaseState `protobuf:"varint,1,opt,name=database_state,json=databaseState,proto3,enum=agents.oracle.DatabaseState" json:"database_state,omitempty"`
	ErrorMsg      []string      `protobuf:"bytes,2,rep,name=error_msg,json=errorMsg,proto3" json:"error_msg,omitempty"`
}

func (x *BounceDatabaseResponse) Reset() {
	*x = BounceDatabaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oracle_pkg_agents_oracle_oracle_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BounceDatabaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BounceDatabaseResponse) ProtoMessage() {}

func (x *BounceDatabaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_oracle_pkg_agents_oracle_oracle_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BounceDatabaseResponse.ProtoReflect.Descriptor instead.
func (*BounceDatabaseResponse) Descriptor() ([]byte, []int) {
	return file_oracle_pkg_agents_oracle_oracle_proto_rawDescGZIP(), []int{1}
}

func (x *BounceDatabaseResponse) GetDatabaseState() DatabaseState {
	if x != nil {
		return x.DatabaseState
	}
	return DatabaseState_DATABASE_STATE_UNSPECIFIED
}

func (x *BounceDatabaseResponse) GetErrorMsg() []string {
	if x != nil {
		return x.ErrorMsg
	}
	return nil
}

type BounceListenerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenerName string `protobuf:"bytes,1,opt,name=listener_name,json=listenerName,proto3" json:"listener_name,omitempty"`
	// TNS_ADMIN is the user specified path to Oracle configuration files.
	TnsAdmin string `protobuf:"bytes,2,opt,name=tns_admin,json=tnsAdmin,proto3" json:"tns_admin,omitempty"`
	// operation: start / stop
	Operation BounceListenerRequest_Operation `protobuf:"varint,3,opt,name=operation,proto3,enum=agents.oracle.BounceListenerRequest_Operation" json:"operation,omitempty"`
}

func (x *BounceListenerRequest) Reset() {
	*x = BounceListenerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oracle_pkg_agents_oracle_oracle_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BounceListenerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BounceListenerRequest) ProtoMessage() {}

func (x *BounceListenerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_oracle_pkg_agents_oracle_oracle_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BounceListenerRequest.ProtoReflect.Descriptor instead.
func (*BounceListenerRequest) Descriptor() ([]byte, []int) {
	return file_oracle_pkg_agents_oracle_oracle_proto_rawDescGZIP(), []int{2}
}

func (x *BounceListenerRequest) GetListenerName() string {
	if x != nil {
		return x.ListenerName
	}
	return ""
}

func (x *BounceListenerRequest) GetTnsAdmin() string {
	if x != nil {
		return x.TnsAdmin
	}
	return ""
}

func (x *BounceListenerRequest) GetOperation() BounceListenerRequest_Operation {
	if x != nil {
		return x.Operation
	}
	return BounceListenerRequest_UNKNOWN
}

// BounceListenerResponse is a message containing
// a response from a BounceListener request.
// listener_state is set to ERROR if an expected error
// occurs (e.g. a security verification check fails).
// Otherwise listener_state is set to nil and an
// unexpected error is returned via error.
type BounceListenerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Possible states: READY, STOPPED, ERROR.
	ListenerState ListenerState `protobuf:"varint,1,opt,name=listener_state,json=listenerState,proto3,enum=agents.oracle.ListenerState" json:"listener_state,omitempty"`
	ErrorMsg      []string      `protobuf:"bytes,2,rep,name=error_msg,json=errorMsg,proto3" json:"error_msg,omitempty"`
}

func (x *BounceListenerResponse) Reset() {
	*x = BounceListenerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oracle_pkg_agents_oracle_oracle_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BounceListenerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BounceListenerResponse) ProtoMessage() {}

func (x *BounceListenerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_oracle_pkg_agents_oracle_oracle_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BounceListenerResponse.ProtoReflect.Descriptor instead.
func (*BounceListenerResponse) Descriptor() ([]byte, []int) {
	return file_oracle_pkg_agents_oracle_oracle_proto_rawDescGZIP(), []int{3}
}

func (x *BounceListenerResponse) GetListenerState() ListenerState {
	if x != nil {
		return x.ListenerState
	}
	return ListenerState_LISTENER_STATE_UNSPECIFIED
}

func (x *BounceListenerResponse) GetErrorMsg() []string {
	if x != nil {
		return x.ErrorMsg
	}
	return nil
}

type SetDnfsStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enable bool `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
}

func (x *SetDnfsStateRequest) Reset() {
	*x = SetDnfsStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oracle_pkg_agents_oracle_oracle_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDnfsStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDnfsStateRequest) ProtoMessage() {}

func (x *SetDnfsStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_oracle_pkg_agents_oracle_oracle_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDnfsStateRequest.ProtoReflect.Descriptor instead.
func (*SetDnfsStateRequest) Descriptor() ([]byte, []int) {
	return file_oracle_pkg_agents_oracle_oracle_proto_rawDescGZIP(), []int{4}
}

func (x *SetDnfsStateRequest) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

type SetDnfsStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetDnfsStateResponse) Reset() {
	*x = SetDnfsStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oracle_pkg_agents_oracle_oracle_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDnfsStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDnfsStateResponse) ProtoMessage() {}

func (x *SetDnfsStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_oracle_pkg_agents_oracle_oracle_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDnfsStateResponse.ProtoReflect.Descriptor instead.
func (*SetDnfsStateResponse) Descriptor() ([]byte, []int) {
	return file_oracle_pkg_agents_oracle_oracle_proto_rawDescGZIP(), []int{5}
}

var File_oracle_pkg_agents_oracle_oracle_proto protoreflect.FileDescriptor

var file_oracle_pkg_agents_oracle_oracle_proto_rawDesc = []byte{
	0x0a, 0x25, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x73, 0x2f, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2f, 0x6f, 0x72, 0x61, 0x63, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x22, 0x87, 0x02, 0x0a, 0x15, 0x42, 0x6f, 0x75, 0x6e, 0x63,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x23, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4c, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x42, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x13, 0x61,
	0x76, 0x6f, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x62, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x61, 0x76, 0x6f, 0x69, 0x64, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x22, 0x33, 0x0a, 0x09, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x54, 0x41, 0x52, 0x54, 0x55, 0x50,
	0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x48, 0x55, 0x54, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x02,
	0x22, 0x7a, 0x0a, 0x16, 0x42, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0e, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x6f, 0x72, 0x61, 0x63,
	0x6c, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x22, 0xd6, 0x01, 0x0a,
	0x15, 0x42, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74,
	0x6e, 0x73, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x6e, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x4c, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x42, 0x6f, 0x75, 0x6e,
	0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2d, 0x0a, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00,
	0x12, 0x09, 0x0a, 0x05, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x53,
	0x54, 0x4f, 0x50, 0x10, 0x02, 0x22, 0x7a, 0x0a, 0x16, 0x42, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x43, 0x0a, 0x0e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0d, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73,
	0x67, 0x22, 0x2d, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x44, 0x6e, 0x66, 0x73, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x22, 0x16, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x44, 0x6e, 0x66, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x99, 0x01, 0x0a, 0x0d, 0x44, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x44, 0x41,
	0x54, 0x41, 0x42, 0x41, 0x53, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x52,
	0x45, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x45, 0x41, 0x44,
	0x59, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x54, 0x4f, 0x50, 0x50, 0x49, 0x4e, 0x47, 0x10,
	0x03, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x54, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x10, 0x04, 0x12, 0x0c,
	0x0a, 0x08, 0x55, 0x50, 0x44, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x05, 0x12, 0x0c, 0x0a, 0x08,
	0x44, 0x45, 0x4c, 0x45, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x06, 0x12, 0x18, 0x0a, 0x14, 0x44, 0x41,
	0x54, 0x41, 0x42, 0x41, 0x53, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0x07, 0x2a, 0x5b, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x4c, 0x49, 0x53, 0x54, 0x45, 0x4e, 0x45,
	0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x55, 0x50, 0x10, 0x01, 0x12, 0x08, 0x0a,
	0x04, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x4c, 0x49, 0x53, 0x54, 0x45,
	0x4e, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x03, 0x42, 0x58, 0x5a, 0x56, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2f, 0x65, 0x6c, 0x63, 0x61, 0x72, 0x72, 0x6f, 0x2d, 0x6f, 0x72, 0x61, 0x63,
	0x6c, 0x65, 0x2d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x6f, 0x72, 0x61, 0x63,
	0x6c, 0x65, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x6f, 0x72,
	0x61, 0x63, 0x6c, 0x65, 0x3b, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_oracle_pkg_agents_oracle_oracle_proto_rawDescOnce sync.Once
	file_oracle_pkg_agents_oracle_oracle_proto_rawDescData = file_oracle_pkg_agents_oracle_oracle_proto_rawDesc
)

func file_oracle_pkg_agents_oracle_oracle_proto_rawDescGZIP() []byte {
	file_oracle_pkg_agents_oracle_oracle_proto_rawDescOnce.Do(func() {
		file_oracle_pkg_agents_oracle_oracle_proto_rawDescData = protoimpl.X.CompressGZIP(file_oracle_pkg_agents_oracle_oracle_proto_rawDescData)
	})
	return file_oracle_pkg_agents_oracle_oracle_proto_rawDescData
}

var file_oracle_pkg_agents_oracle_oracle_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_oracle_pkg_agents_oracle_oracle_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_oracle_pkg_agents_oracle_oracle_proto_goTypes = []interface{}{
	(DatabaseState)(0),                   // 0: agents.oracle.DatabaseState
	(ListenerState)(0),                   // 1: agents.oracle.ListenerState
	(BounceDatabaseRequest_Operation)(0), // 2: agents.oracle.BounceDatabaseRequest.Operation
	(BounceListenerRequest_Operation)(0), // 3: agents.oracle.BounceListenerRequest.Operation
	(*BounceDatabaseRequest)(nil),        // 4: agents.oracle.BounceDatabaseRequest
	(*BounceDatabaseResponse)(nil),       // 5: agents.oracle.BounceDatabaseResponse
	(*BounceListenerRequest)(nil),        // 6: agents.oracle.BounceListenerRequest
	(*BounceListenerResponse)(nil),       // 7: agents.oracle.BounceListenerResponse
	(*SetDnfsStateRequest)(nil),          // 8: agents.oracle.SetDnfsStateRequest
	(*SetDnfsStateResponse)(nil),         // 9: agents.oracle.SetDnfsStateResponse
}
var file_oracle_pkg_agents_oracle_oracle_proto_depIdxs = []int32{
	2, // 0: agents.oracle.BounceDatabaseRequest.operation:type_name -> agents.oracle.BounceDatabaseRequest.Operation
	0, // 1: agents.oracle.BounceDatabaseResponse.database_state:type_name -> agents.oracle.DatabaseState
	3, // 2: agents.oracle.BounceListenerRequest.operation:type_name -> agents.oracle.BounceListenerRequest.Operation
	1, // 3: agents.oracle.BounceListenerResponse.listener_state:type_name -> agents.oracle.ListenerState
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_oracle_pkg_agents_oracle_oracle_proto_init() }
func file_oracle_pkg_agents_oracle_oracle_proto_init() {
	if File_oracle_pkg_agents_oracle_oracle_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_oracle_pkg_agents_oracle_oracle_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BounceDatabaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oracle_pkg_agents_oracle_oracle_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BounceDatabaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oracle_pkg_agents_oracle_oracle_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BounceListenerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oracle_pkg_agents_oracle_oracle_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BounceListenerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oracle_pkg_agents_oracle_oracle_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDnfsStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oracle_pkg_agents_oracle_oracle_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDnfsStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_oracle_pkg_agents_oracle_oracle_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_oracle_pkg_agents_oracle_oracle_proto_goTypes,
		DependencyIndexes: file_oracle_pkg_agents_oracle_oracle_proto_depIdxs,
		EnumInfos:         file_oracle_pkg_agents_oracle_oracle_proto_enumTypes,
		MessageInfos:      file_oracle_pkg_agents_oracle_oracle_proto_msgTypes,
	}.Build()
	File_oracle_pkg_agents_oracle_oracle_proto = out.File
	file_oracle_pkg_agents_oracle_oracle_proto_rawDesc = nil
	file_oracle_pkg_agents_oracle_oracle_proto_goTypes = nil
	file_oracle_pkg_agents_oracle_oracle_proto_depIdxs = nil
}
