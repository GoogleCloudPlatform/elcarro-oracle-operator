// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package protos

import (
	context "context"
	longrunning "google.golang.org/genproto/googleapis/longrunning"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// ConfigAgentClient is the client API for ConfigAgent service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ConfigAgentClient interface {
	CreateDatabase(ctx context.Context, in *CreateDatabaseRequest, opts ...grpc.CallOption) (*CreateDatabaseResponse, error)
	CreateUsers(ctx context.Context, in *CreateUsersRequest, opts ...grpc.CallOption) (*CreateUsersResponse, error)
	CreateCDBUser(ctx context.Context, in *CreateCDBUserRequest, opts ...grpc.CallOption) (*CreateCDBUserResponse, error)
	UsersChanged(ctx context.Context, in *UsersChangedRequest, opts ...grpc.CallOption) (*UsersChangedResponse, error)
	UpdateUsers(ctx context.Context, in *UpdateUsersRequest, opts ...grpc.CallOption) (*UpdateUsersResponse, error)
	VerifyPhysicalBackup(ctx context.Context, in *VerifyPhysicalBackupRequest, opts ...grpc.CallOption) (*VerifyPhysicalBackupResponse, error)
	PhysicalBackup(ctx context.Context, in *PhysicalBackupRequest, opts ...grpc.CallOption) (*longrunning.Operation, error)
	PhysicalRestore(ctx context.Context, in *PhysicalRestoreRequest, opts ...grpc.CallOption) (*longrunning.Operation, error)
	CheckStatus(ctx context.Context, in *CheckStatusRequest, opts ...grpc.CallOption) (*CheckStatusResponse, error)
	CreateCDB(ctx context.Context, in *CreateCDBRequest, opts ...grpc.CallOption) (*longrunning.Operation, error)
	CreateListener(ctx context.Context, in *CreateListenerRequest, opts ...grpc.CallOption) (*CreateListenerResponse, error)
	DataPumpImport(ctx context.Context, in *DataPumpImportRequest, opts ...grpc.CallOption) (*longrunning.Operation, error)
	// Lists operations that match the specified filter in the request.
	ListOperations(ctx context.Context, in *longrunning.ListOperationsRequest, opts ...grpc.CallOption) (*longrunning.ListOperationsResponse, error)
	// Gets the latest state of a long-running operation.  Clients can use this
	// method to poll the operation result.
	GetOperation(ctx context.Context, in *longrunning.GetOperationRequest, opts ...grpc.CallOption) (*longrunning.Operation, error)
	// Deletes a long-running operation. This method indicates that the client is
	// no longer interested in the operation result. It does not cancel the
	// operation.
	DeleteOperation(ctx context.Context, in *longrunning.DeleteOperationRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	BootstrapDatabase(ctx context.Context, in *BootstrapDatabaseRequest, opts ...grpc.CallOption) (*longrunning.Operation, error)
	BootstrapStandby(ctx context.Context, in *BootstrapStandbyRequest, opts ...grpc.CallOption) (*BootstrapStandbyResponse, error)
	DataPumpExport(ctx context.Context, in *DataPumpExportRequest, opts ...grpc.CallOption) (*longrunning.Operation, error)
	SetParameter(ctx context.Context, in *SetParameterRequest, opts ...grpc.CallOption) (*SetParameterResponse, error)
	GetParameterTypeValue(ctx context.Context, in *GetParameterTypeValueRequest, opts ...grpc.CallOption) (*GetParameterTypeValueResponse, error)
	BounceDatabase(ctx context.Context, in *BounceDatabaseRequest, opts ...grpc.CallOption) (*BounceDatabaseResponse, error)
	RecoverConfigFile(ctx context.Context, in *RecoverConfigFileRequest, opts ...grpc.CallOption) (*RecoverConfigFileResponse, error)
	FetchServiceImageMetaData(ctx context.Context, in *FetchServiceImageMetaDataRequest, opts ...grpc.CallOption) (*FetchServiceImageMetaDataResponse, error)
}

type configAgentClient struct {
	cc grpc.ClientConnInterface
}

func NewConfigAgentClient(cc grpc.ClientConnInterface) ConfigAgentClient {
	return &configAgentClient{cc}
}

func (c *configAgentClient) CreateDatabase(ctx context.Context, in *CreateDatabaseRequest, opts ...grpc.CallOption) (*CreateDatabaseResponse, error) {
	out := new(CreateDatabaseResponse)
	err := c.cc.Invoke(ctx, "/protos.ConfigAgent/CreateDatabase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configAgentClient) CreateUsers(ctx context.Context, in *CreateUsersRequest, opts ...grpc.CallOption) (*CreateUsersResponse, error) {
	out := new(CreateUsersResponse)
	err := c.cc.Invoke(ctx, "/protos.ConfigAgent/CreateUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configAgentClient) CreateCDBUser(ctx context.Context, in *CreateCDBUserRequest, opts ...grpc.CallOption) (*CreateCDBUserResponse, error) {
	out := new(CreateCDBUserResponse)
	err := c.cc.Invoke(ctx, "/protos.ConfigAgent/CreateCDBUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configAgentClient) UsersChanged(ctx context.Context, in *UsersChangedRequest, opts ...grpc.CallOption) (*UsersChangedResponse, error) {
	out := new(UsersChangedResponse)
	err := c.cc.Invoke(ctx, "/protos.ConfigAgent/UsersChanged", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configAgentClient) UpdateUsers(ctx context.Context, in *UpdateUsersRequest, opts ...grpc.CallOption) (*UpdateUsersResponse, error) {
	out := new(UpdateUsersResponse)
	err := c.cc.Invoke(ctx, "/protos.ConfigAgent/UpdateUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configAgentClient) VerifyPhysicalBackup(ctx context.Context, in *VerifyPhysicalBackupRequest, opts ...grpc.CallOption) (*VerifyPhysicalBackupResponse, error) {
	out := new(VerifyPhysicalBackupResponse)
	err := c.cc.Invoke(ctx, "/protos.ConfigAgent/VerifyPhysicalBackup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configAgentClient) PhysicalBackup(ctx context.Context, in *PhysicalBackupRequest, opts ...grpc.CallOption) (*longrunning.Operation, error) {
	out := new(longrunning.Operation)
	err := c.cc.Invoke(ctx, "/protos.ConfigAgent/PhysicalBackup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configAgentClient) PhysicalRestore(ctx context.Context, in *PhysicalRestoreRequest, opts ...grpc.CallOption) (*longrunning.Operation, error) {
	out := new(longrunning.Operation)
	err := c.cc.Invoke(ctx, "/protos.ConfigAgent/PhysicalRestore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configAgentClient) CheckStatus(ctx context.Context, in *CheckStatusRequest, opts ...grpc.CallOption) (*CheckStatusResponse, error) {
	out := new(CheckStatusResponse)
	err := c.cc.Invoke(ctx, "/protos.ConfigAgent/CheckStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configAgentClient) CreateCDB(ctx context.Context, in *CreateCDBRequest, opts ...grpc.CallOption) (*longrunning.Operation, error) {
	out := new(longrunning.Operation)
	err := c.cc.Invoke(ctx, "/protos.ConfigAgent/CreateCDB", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configAgentClient) CreateListener(ctx context.Context, in *CreateListenerRequest, opts ...grpc.CallOption) (*CreateListenerResponse, error) {
	out := new(CreateListenerResponse)
	err := c.cc.Invoke(ctx, "/protos.ConfigAgent/CreateListener", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configAgentClient) DataPumpImport(ctx context.Context, in *DataPumpImportRequest, opts ...grpc.CallOption) (*longrunning.Operation, error) {
	out := new(longrunning.Operation)
	err := c.cc.Invoke(ctx, "/protos.ConfigAgent/DataPumpImport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configAgentClient) ListOperations(ctx context.Context, in *longrunning.ListOperationsRequest, opts ...grpc.CallOption) (*longrunning.ListOperationsResponse, error) {
	out := new(longrunning.ListOperationsResponse)
	err := c.cc.Invoke(ctx, "/protos.ConfigAgent/ListOperations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configAgentClient) GetOperation(ctx context.Context, in *longrunning.GetOperationRequest, opts ...grpc.CallOption) (*longrunning.Operation, error) {
	out := new(longrunning.Operation)
	err := c.cc.Invoke(ctx, "/protos.ConfigAgent/GetOperation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configAgentClient) DeleteOperation(ctx context.Context, in *longrunning.DeleteOperationRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/protos.ConfigAgent/DeleteOperation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configAgentClient) BootstrapDatabase(ctx context.Context, in *BootstrapDatabaseRequest, opts ...grpc.CallOption) (*longrunning.Operation, error) {
	out := new(longrunning.Operation)
	err := c.cc.Invoke(ctx, "/protos.ConfigAgent/BootstrapDatabase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configAgentClient) BootstrapStandby(ctx context.Context, in *BootstrapStandbyRequest, opts ...grpc.CallOption) (*BootstrapStandbyResponse, error) {
	out := new(BootstrapStandbyResponse)
	err := c.cc.Invoke(ctx, "/protos.ConfigAgent/BootstrapStandby", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configAgentClient) DataPumpExport(ctx context.Context, in *DataPumpExportRequest, opts ...grpc.CallOption) (*longrunning.Operation, error) {
	out := new(longrunning.Operation)
	err := c.cc.Invoke(ctx, "/protos.ConfigAgent/DataPumpExport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configAgentClient) SetParameter(ctx context.Context, in *SetParameterRequest, opts ...grpc.CallOption) (*SetParameterResponse, error) {
	out := new(SetParameterResponse)
	err := c.cc.Invoke(ctx, "/protos.ConfigAgent/SetParameter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configAgentClient) GetParameterTypeValue(ctx context.Context, in *GetParameterTypeValueRequest, opts ...grpc.CallOption) (*GetParameterTypeValueResponse, error) {
	out := new(GetParameterTypeValueResponse)
	err := c.cc.Invoke(ctx, "/protos.ConfigAgent/GetParameterTypeValue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configAgentClient) BounceDatabase(ctx context.Context, in *BounceDatabaseRequest, opts ...grpc.CallOption) (*BounceDatabaseResponse, error) {
	out := new(BounceDatabaseResponse)
	err := c.cc.Invoke(ctx, "/protos.ConfigAgent/BounceDatabase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configAgentClient) RecoverConfigFile(ctx context.Context, in *RecoverConfigFileRequest, opts ...grpc.CallOption) (*RecoverConfigFileResponse, error) {
	out := new(RecoverConfigFileResponse)
	err := c.cc.Invoke(ctx, "/protos.ConfigAgent/RecoverConfigFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configAgentClient) FetchServiceImageMetaData(ctx context.Context, in *FetchServiceImageMetaDataRequest, opts ...grpc.CallOption) (*FetchServiceImageMetaDataResponse, error) {
	out := new(FetchServiceImageMetaDataResponse)
	err := c.cc.Invoke(ctx, "/protos.ConfigAgent/FetchServiceImageMetaData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ConfigAgentServer is the server API for ConfigAgent service.
// All implementations must embed UnimplementedConfigAgentServer
// for forward compatibility
type ConfigAgentServer interface {
	CreateDatabase(context.Context, *CreateDatabaseRequest) (*CreateDatabaseResponse, error)
	CreateUsers(context.Context, *CreateUsersRequest) (*CreateUsersResponse, error)
	CreateCDBUser(context.Context, *CreateCDBUserRequest) (*CreateCDBUserResponse, error)
	UsersChanged(context.Context, *UsersChangedRequest) (*UsersChangedResponse, error)
	UpdateUsers(context.Context, *UpdateUsersRequest) (*UpdateUsersResponse, error)
	VerifyPhysicalBackup(context.Context, *VerifyPhysicalBackupRequest) (*VerifyPhysicalBackupResponse, error)
	PhysicalBackup(context.Context, *PhysicalBackupRequest) (*longrunning.Operation, error)
	PhysicalRestore(context.Context, *PhysicalRestoreRequest) (*longrunning.Operation, error)
	CheckStatus(context.Context, *CheckStatusRequest) (*CheckStatusResponse, error)
	CreateCDB(context.Context, *CreateCDBRequest) (*longrunning.Operation, error)
	CreateListener(context.Context, *CreateListenerRequest) (*CreateListenerResponse, error)
	DataPumpImport(context.Context, *DataPumpImportRequest) (*longrunning.Operation, error)
	// Lists operations that match the specified filter in the request.
	ListOperations(context.Context, *longrunning.ListOperationsRequest) (*longrunning.ListOperationsResponse, error)
	// Gets the latest state of a long-running operation.  Clients can use this
	// method to poll the operation result.
	GetOperation(context.Context, *longrunning.GetOperationRequest) (*longrunning.Operation, error)
	// Deletes a long-running operation. This method indicates that the client is
	// no longer interested in the operation result. It does not cancel the
	// operation.
	DeleteOperation(context.Context, *longrunning.DeleteOperationRequest) (*emptypb.Empty, error)
	BootstrapDatabase(context.Context, *BootstrapDatabaseRequest) (*longrunning.Operation, error)
	BootstrapStandby(context.Context, *BootstrapStandbyRequest) (*BootstrapStandbyResponse, error)
	DataPumpExport(context.Context, *DataPumpExportRequest) (*longrunning.Operation, error)
	SetParameter(context.Context, *SetParameterRequest) (*SetParameterResponse, error)
	GetParameterTypeValue(context.Context, *GetParameterTypeValueRequest) (*GetParameterTypeValueResponse, error)
	BounceDatabase(context.Context, *BounceDatabaseRequest) (*BounceDatabaseResponse, error)
	RecoverConfigFile(context.Context, *RecoverConfigFileRequest) (*RecoverConfigFileResponse, error)
	FetchServiceImageMetaData(context.Context, *FetchServiceImageMetaDataRequest) (*FetchServiceImageMetaDataResponse, error)
	mustEmbedUnimplementedConfigAgentServer()
}

// UnimplementedConfigAgentServer must be embedded to have forward compatible implementations.
type UnimplementedConfigAgentServer struct {
}

func (UnimplementedConfigAgentServer) CreateDatabase(context.Context, *CreateDatabaseRequest) (*CreateDatabaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDatabase not implemented")
}
func (UnimplementedConfigAgentServer) CreateUsers(context.Context, *CreateUsersRequest) (*CreateUsersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUsers not implemented")
}
func (UnimplementedConfigAgentServer) CreateCDBUser(context.Context, *CreateCDBUserRequest) (*CreateCDBUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCDBUser not implemented")
}
func (UnimplementedConfigAgentServer) UsersChanged(context.Context, *UsersChangedRequest) (*UsersChangedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UsersChanged not implemented")
}
func (UnimplementedConfigAgentServer) UpdateUsers(context.Context, *UpdateUsersRequest) (*UpdateUsersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUsers not implemented")
}
func (UnimplementedConfigAgentServer) VerifyPhysicalBackup(context.Context, *VerifyPhysicalBackupRequest) (*VerifyPhysicalBackupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VerifyPhysicalBackup not implemented")
}
func (UnimplementedConfigAgentServer) PhysicalBackup(context.Context, *PhysicalBackupRequest) (*longrunning.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PhysicalBackup not implemented")
}
func (UnimplementedConfigAgentServer) PhysicalRestore(context.Context, *PhysicalRestoreRequest) (*longrunning.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PhysicalRestore not implemented")
}
func (UnimplementedConfigAgentServer) CheckStatus(context.Context, *CheckStatusRequest) (*CheckStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckStatus not implemented")
}
func (UnimplementedConfigAgentServer) CreateCDB(context.Context, *CreateCDBRequest) (*longrunning.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCDB not implemented")
}
func (UnimplementedConfigAgentServer) CreateListener(context.Context, *CreateListenerRequest) (*CreateListenerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateListener not implemented")
}
func (UnimplementedConfigAgentServer) DataPumpImport(context.Context, *DataPumpImportRequest) (*longrunning.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DataPumpImport not implemented")
}
func (UnimplementedConfigAgentServer) ListOperations(context.Context, *longrunning.ListOperationsRequest) (*longrunning.ListOperationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListOperations not implemented")
}
func (UnimplementedConfigAgentServer) GetOperation(context.Context, *longrunning.GetOperationRequest) (*longrunning.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOperation not implemented")
}
func (UnimplementedConfigAgentServer) DeleteOperation(context.Context, *longrunning.DeleteOperationRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteOperation not implemented")
}
func (UnimplementedConfigAgentServer) BootstrapDatabase(context.Context, *BootstrapDatabaseRequest) (*longrunning.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BootstrapDatabase not implemented")
}
func (UnimplementedConfigAgentServer) BootstrapStandby(context.Context, *BootstrapStandbyRequest) (*BootstrapStandbyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BootstrapStandby not implemented")
}
func (UnimplementedConfigAgentServer) DataPumpExport(context.Context, *DataPumpExportRequest) (*longrunning.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DataPumpExport not implemented")
}
func (UnimplementedConfigAgentServer) SetParameter(context.Context, *SetParameterRequest) (*SetParameterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetParameter not implemented")
}
func (UnimplementedConfigAgentServer) GetParameterTypeValue(context.Context, *GetParameterTypeValueRequest) (*GetParameterTypeValueResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetParameterTypeValue not implemented")
}
func (UnimplementedConfigAgentServer) BounceDatabase(context.Context, *BounceDatabaseRequest) (*BounceDatabaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BounceDatabase not implemented")
}
func (UnimplementedConfigAgentServer) RecoverConfigFile(context.Context, *RecoverConfigFileRequest) (*RecoverConfigFileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RecoverConfigFile not implemented")
}
func (UnimplementedConfigAgentServer) FetchServiceImageMetaData(context.Context, *FetchServiceImageMetaDataRequest) (*FetchServiceImageMetaDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchServiceImageMetaData not implemented")
}
func (UnimplementedConfigAgentServer) mustEmbedUnimplementedConfigAgentServer() {}

// UnsafeConfigAgentServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ConfigAgentServer will
// result in compilation errors.
type UnsafeConfigAgentServer interface {
	mustEmbedUnimplementedConfigAgentServer()
}

func RegisterConfigAgentServer(s grpc.ServiceRegistrar, srv ConfigAgentServer) {
	s.RegisterService(&ConfigAgent_ServiceDesc, srv)
}

func _ConfigAgent_CreateDatabase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDatabaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigAgentServer).CreateDatabase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.ConfigAgent/CreateDatabase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigAgentServer).CreateDatabase(ctx, req.(*CreateDatabaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigAgent_CreateUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUsersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigAgentServer).CreateUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.ConfigAgent/CreateUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigAgentServer).CreateUsers(ctx, req.(*CreateUsersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigAgent_CreateCDBUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCDBUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigAgentServer).CreateCDBUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.ConfigAgent/CreateCDBUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigAgentServer).CreateCDBUser(ctx, req.(*CreateCDBUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigAgent_UsersChanged_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UsersChangedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigAgentServer).UsersChanged(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.ConfigAgent/UsersChanged",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigAgentServer).UsersChanged(ctx, req.(*UsersChangedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigAgent_UpdateUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUsersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigAgentServer).UpdateUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.ConfigAgent/UpdateUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigAgentServer).UpdateUsers(ctx, req.(*UpdateUsersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigAgent_VerifyPhysicalBackup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyPhysicalBackupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigAgentServer).VerifyPhysicalBackup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.ConfigAgent/VerifyPhysicalBackup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigAgentServer).VerifyPhysicalBackup(ctx, req.(*VerifyPhysicalBackupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigAgent_PhysicalBackup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PhysicalBackupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigAgentServer).PhysicalBackup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.ConfigAgent/PhysicalBackup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigAgentServer).PhysicalBackup(ctx, req.(*PhysicalBackupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigAgent_PhysicalRestore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PhysicalRestoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigAgentServer).PhysicalRestore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.ConfigAgent/PhysicalRestore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigAgentServer).PhysicalRestore(ctx, req.(*PhysicalRestoreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigAgent_CheckStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigAgentServer).CheckStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.ConfigAgent/CheckStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigAgentServer).CheckStatus(ctx, req.(*CheckStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigAgent_CreateCDB_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCDBRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigAgentServer).CreateCDB(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.ConfigAgent/CreateCDB",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigAgentServer).CreateCDB(ctx, req.(*CreateCDBRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigAgent_CreateListener_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateListenerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigAgentServer).CreateListener(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.ConfigAgent/CreateListener",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigAgentServer).CreateListener(ctx, req.(*CreateListenerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigAgent_DataPumpImport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DataPumpImportRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigAgentServer).DataPumpImport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.ConfigAgent/DataPumpImport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigAgentServer).DataPumpImport(ctx, req.(*DataPumpImportRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigAgent_ListOperations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(longrunning.ListOperationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigAgentServer).ListOperations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.ConfigAgent/ListOperations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigAgentServer).ListOperations(ctx, req.(*longrunning.ListOperationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigAgent_GetOperation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(longrunning.GetOperationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigAgentServer).GetOperation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.ConfigAgent/GetOperation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigAgentServer).GetOperation(ctx, req.(*longrunning.GetOperationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigAgent_DeleteOperation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(longrunning.DeleteOperationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigAgentServer).DeleteOperation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.ConfigAgent/DeleteOperation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigAgentServer).DeleteOperation(ctx, req.(*longrunning.DeleteOperationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigAgent_BootstrapDatabase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BootstrapDatabaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigAgentServer).BootstrapDatabase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.ConfigAgent/BootstrapDatabase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigAgentServer).BootstrapDatabase(ctx, req.(*BootstrapDatabaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigAgent_BootstrapStandby_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BootstrapStandbyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigAgentServer).BootstrapStandby(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.ConfigAgent/BootstrapStandby",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigAgentServer).BootstrapStandby(ctx, req.(*BootstrapStandbyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigAgent_DataPumpExport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DataPumpExportRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigAgentServer).DataPumpExport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.ConfigAgent/DataPumpExport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigAgentServer).DataPumpExport(ctx, req.(*DataPumpExportRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigAgent_SetParameter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetParameterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigAgentServer).SetParameter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.ConfigAgent/SetParameter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigAgentServer).SetParameter(ctx, req.(*SetParameterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigAgent_GetParameterTypeValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetParameterTypeValueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigAgentServer).GetParameterTypeValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.ConfigAgent/GetParameterTypeValue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigAgentServer).GetParameterTypeValue(ctx, req.(*GetParameterTypeValueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigAgent_BounceDatabase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BounceDatabaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigAgentServer).BounceDatabase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.ConfigAgent/BounceDatabase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigAgentServer).BounceDatabase(ctx, req.(*BounceDatabaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigAgent_RecoverConfigFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RecoverConfigFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigAgentServer).RecoverConfigFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.ConfigAgent/RecoverConfigFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigAgentServer).RecoverConfigFile(ctx, req.(*RecoverConfigFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigAgent_FetchServiceImageMetaData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchServiceImageMetaDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigAgentServer).FetchServiceImageMetaData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.ConfigAgent/FetchServiceImageMetaData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigAgentServer).FetchServiceImageMetaData(ctx, req.(*FetchServiceImageMetaDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ConfigAgent_ServiceDesc is the grpc.ServiceDesc for ConfigAgent service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ConfigAgent_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "protos.ConfigAgent",
	HandlerType: (*ConfigAgentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateDatabase",
			Handler:    _ConfigAgent_CreateDatabase_Handler,
		},
		{
			MethodName: "CreateUsers",
			Handler:    _ConfigAgent_CreateUsers_Handler,
		},
		{
			MethodName: "CreateCDBUser",
			Handler:    _ConfigAgent_CreateCDBUser_Handler,
		},
		{
			MethodName: "UsersChanged",
			Handler:    _ConfigAgent_UsersChanged_Handler,
		},
		{
			MethodName: "UpdateUsers",
			Handler:    _ConfigAgent_UpdateUsers_Handler,
		},
		{
			MethodName: "VerifyPhysicalBackup",
			Handler:    _ConfigAgent_VerifyPhysicalBackup_Handler,
		},
		{
			MethodName: "PhysicalBackup",
			Handler:    _ConfigAgent_PhysicalBackup_Handler,
		},
		{
			MethodName: "PhysicalRestore",
			Handler:    _ConfigAgent_PhysicalRestore_Handler,
		},
		{
			MethodName: "CheckStatus",
			Handler:    _ConfigAgent_CheckStatus_Handler,
		},
		{
			MethodName: "CreateCDB",
			Handler:    _ConfigAgent_CreateCDB_Handler,
		},
		{
			MethodName: "CreateListener",
			Handler:    _ConfigAgent_CreateListener_Handler,
		},
		{
			MethodName: "DataPumpImport",
			Handler:    _ConfigAgent_DataPumpImport_Handler,
		},
		{
			MethodName: "ListOperations",
			Handler:    _ConfigAgent_ListOperations_Handler,
		},
		{
			MethodName: "GetOperation",
			Handler:    _ConfigAgent_GetOperation_Handler,
		},
		{
			MethodName: "DeleteOperation",
			Handler:    _ConfigAgent_DeleteOperation_Handler,
		},
		{
			MethodName: "BootstrapDatabase",
			Handler:    _ConfigAgent_BootstrapDatabase_Handler,
		},
		{
			MethodName: "BootstrapStandby",
			Handler:    _ConfigAgent_BootstrapStandby_Handler,
		},
		{
			MethodName: "DataPumpExport",
			Handler:    _ConfigAgent_DataPumpExport_Handler,
		},
		{
			MethodName: "SetParameter",
			Handler:    _ConfigAgent_SetParameter_Handler,
		},
		{
			MethodName: "GetParameterTypeValue",
			Handler:    _ConfigAgent_GetParameterTypeValue_Handler,
		},
		{
			MethodName: "BounceDatabase",
			Handler:    _ConfigAgent_BounceDatabase_Handler,
		},
		{
			MethodName: "RecoverConfigFile",
			Handler:    _ConfigAgent_RecoverConfigFile_Handler,
		},
		{
			MethodName: "FetchServiceImageMetaData",
			Handler:    _ConfigAgent_FetchServiceImageMetaData_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "oracle/pkg/agents/config_agent/protos/service.proto",
}
